[{"/Users/alexis/Desktop/drinkcipe/src/index.js":"1","/Users/alexis/Desktop/drinkcipe/src/App.js":"2","/Users/alexis/Desktop/drinkcipe/src/store/auth-context.js":"3","/Users/alexis/Desktop/drinkcipe/src/pages/StartingPage/StartingPage.js":"4","/Users/alexis/Desktop/drinkcipe/src/pages/PageNotFound.js":"5","/Users/alexis/Desktop/drinkcipe/src/pages/Login/Login.js":"6","/Users/alexis/Desktop/drinkcipe/src/pages/RecipeDetail/RecipeDetail.js":"7","/Users/alexis/Desktop/drinkcipe/src/pages/MyRecipes/MyRecipes.js":"8","/Users/alexis/Desktop/drinkcipe/src/pages/Profile/Profile.js":"9","/Users/alexis/Desktop/drinkcipe/src/pages/Profile/EditInfo.js":"10","/Users/alexis/Desktop/drinkcipe/src/pages/FellowBartenders/FellowBartenders/FellowBartenders.js":"11","/Users/alexis/Desktop/drinkcipe/src/components/comments/comments/Comments.js":"12","/Users/alexis/Desktop/drinkcipe/src/pages/MyRecipes/components/form/edit/EditYourTwist.js":"13","/Users/alexis/Desktop/drinkcipe/src/components/lib/api.js":"14","/Users/alexis/Desktop/drinkcipe/src/components/layout/Layout/Layout.js":"15","/Users/alexis/Desktop/drinkcipe/src/pages/MyRecipes/components/form/create/AddYourTwist.js":"16","/Users/alexis/Desktop/drinkcipe/src/components/images/getImage/GetImageURL.js":"17","/Users/alexis/Desktop/drinkcipe/src/pages/RecipeDetail/components/marked/MarkedRecipe.js":"18","/Users/alexis/Desktop/drinkcipe/src/pages/Recipes/components/item/RecipeItem.js":"19","/Users/alexis/Desktop/drinkcipe/src/components/UI/Toggle/ToggleSwitch.js":"20","/Users/alexis/Desktop/drinkcipe/src/components/layout/Navigation/MainNavigation.js":"21","/Users/alexis/Desktop/drinkcipe/src/components/UI/Modal/Modal.js":"22","/Users/alexis/Desktop/drinkcipe/src/components/UI/Backdrop/Backdrop.js":"23","/Users/alexis/Desktop/drinkcipe/src/components/UI/Card/Card.js":"24","/Users/alexis/Desktop/drinkcipe/src/components/comments/components/rating/UserRatings.js":"25","/Users/alexis/Desktop/drinkcipe/src/components/comments/components/form/NewCommentForm.js":"26","/Users/alexis/Desktop/drinkcipe/src/components/upload/UploadRecipePic.js":"27","/Users/alexis/Desktop/drinkcipe/src/components/comments/components/item/CommentItem.js":"28","/Users/alexis/Desktop/drinkcipe/src/components/images/getImage/GetMyImage.js":"29","/Users/alexis/Desktop/drinkcipe/src/pages/FellowBartenders/SearchBartenders/SearchBartenders.js":"30","/Users/alexis/Desktop/drinkcipe/src/components/UI/Modal/OkModal.js":"31","/Users/alexis/Desktop/drinkcipe/src/pages/FellowBartenders/Invitation/Invitation.js":"32","/Users/alexis/Desktop/drinkcipe/src/pages/Recipes/Recipes/RecipeHome/Recipes.js":"33","/Users/alexis/Desktop/drinkcipe/src/pages/Recipes/Recipes/RecipesByUserId/UserRecipes.js":"34","/Users/alexis/Desktop/drinkcipe/src/pages/Share/Share.js":"35","/Users/alexis/Desktop/drinkcipe/src/store/websocket-context.js":"36"},{"size":557,"mtime":1652372386762,"results":"37","hashOfConfig":"38"},{"size":3055,"mtime":1652409854269,"results":"39","hashOfConfig":"38"},{"size":3505,"mtime":1650553058104,"results":"40","hashOfConfig":"38"},{"size":1763,"mtime":1651755425850,"results":"41","hashOfConfig":"38"},{"size":165,"mtime":1648990306115,"results":"42","hashOfConfig":"38"},{"size":4966,"mtime":1652423863254,"results":"43","hashOfConfig":"38"},{"size":2561,"mtime":1652189095894,"results":"44","hashOfConfig":"38"},{"size":2614,"mtime":1652719256493,"results":"45","hashOfConfig":"38"},{"size":2212,"mtime":1652100031463,"results":"46","hashOfConfig":"38"},{"size":5378,"mtime":1652096853812,"results":"47","hashOfConfig":"38"},{"size":3325,"mtime":1652409829716,"results":"48","hashOfConfig":"38"},{"size":4226,"mtime":1651240978183,"results":"49","hashOfConfig":"38"},{"size":10220,"mtime":1651755927726,"results":"50","hashOfConfig":"38"},{"size":9813,"mtime":1652366782122,"results":"51","hashOfConfig":"38"},{"size":326,"mtime":1648985311608,"results":"52","hashOfConfig":"38"},{"size":5519,"mtime":1651755893847,"results":"53","hashOfConfig":"38"},{"size":264,"mtime":1652700890085,"results":"54","hashOfConfig":"38"},{"size":3892,"mtime":1652189052333,"results":"55","hashOfConfig":"38"},{"size":655,"mtime":1652703085778,"results":"56","hashOfConfig":"38"},{"size":737,"mtime":1650553058097,"results":"57","hashOfConfig":"38"},{"size":7182,"mtime":1652718899272,"results":"58","hashOfConfig":"38"},{"size":379,"mtime":1652710501676,"results":"59","hashOfConfig":"38"},{"size":193,"mtime":1648992299834,"results":"60","hashOfConfig":"38"},{"size":156,"mtime":1616596573000,"results":"61","hashOfConfig":"38"},{"size":1553,"mtime":1651235732625,"results":"62","hashOfConfig":"38"},{"size":2224,"mtime":1651237013045,"results":"63","hashOfConfig":"38"},{"size":1313,"mtime":1651755917439,"results":"64","hashOfConfig":"38"},{"size":1557,"mtime":1651204835816,"results":"65","hashOfConfig":"38"},{"size":496,"mtime":1652091066064,"results":"66","hashOfConfig":"38"},{"size":4064,"mtime":1652701233949,"results":"67","hashOfConfig":"38"},{"size":288,"mtime":1651816035554,"results":"68","hashOfConfig":"38"},{"size":3663,"mtime":1652703658345,"results":"69","hashOfConfig":"38"},{"size":3377,"mtime":1652703075490,"results":"70","hashOfConfig":"38"},{"size":2225,"mtime":1652191609769,"results":"71","hashOfConfig":"38"},{"size":1505,"mtime":1652366659593,"results":"72","hashOfConfig":"38"},{"size":2877,"mtime":1652717947280,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"i4xx17",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},"/Users/alexis/Desktop/drinkcipe/src/index.js",[],["153","154"],"/Users/alexis/Desktop/drinkcipe/src/App.js",[],"/Users/alexis/Desktop/drinkcipe/src/store/auth-context.js",["155"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { refreshTokenAPI } from '../components/lib/api';\n\nlet logoutTimer;\nlet refreshTokenTimer;\n\nconst AuthContext = React.createContext({\n    token: '',\n    isLoggedIn: false,\n    login: (token) => {},\n    logout: () => {},\n    refreshToken: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n    const currentTime = new Date().getTime();\n    const adjExpirationTime = new Date(expirationTime).getTime();\n\n    const remainingDuration = adjExpirationTime - currentTime;\n\n    return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n    const storedToken = localStorage.getItem('token');\n    const storedExpirationDate = localStorage.getItem('expirationTime');\n\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n    if (remainingTime <= 60000){\n        localStorage.removeItem('token');\n        localStorage.removeItem('expirationTime');\n        return null;\n    };\n\n    return {\n        token: storedToken,\n        duration: remainingTime\n    };\n};\n\nexport const AuthContextProvider = (props) => {\n    const tokenData = retrieveStoredToken();\n    let initialToken;\n    if (tokenData){\n        initialToken = tokenData.token;\n    };\n\n    const [token, setToken] = useState(initialToken);\n\n    const userIsLoggedIn = !!token;\n\n    const logoutHandler = useCallback(() => {\n        setToken(null);\n        localStorage.removeItem('token');\n        localStorage.removeItem('expirationTime');\n        localStorage.removeItem('refreshToken');\n\n        if (logoutTimer){\n            clearTimeout(logoutTimer);\n        }\n    }, []);\n\n    const loginHandler = (data) => {\n        const expirationTime = new Date((new Date().getTime() + (+data.expiresIn * 1000)));\n        setToken(data.token);\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('expirationTime', expirationTime);\n        localStorage.setItem('refreshToken', data.refreshToken);\n        localStorage.setItem('userId', data.id);\n        localStorage.setItem('username', data.username);\n        localStorage.setItem('email', data.email);\n\n        const remainingTime = calculateRemainingTime(expirationTime);\n        localStorage.setItem('remainingTime', remainingTime);\n\n        refreshTokenTimer = setTimeout(refreshTokenHandler, remainingTime);\n    };\n\n    const refreshTokenHandler = useCallback(() => {\n        const refreshToken = localStorage.getItem('refreshToken');\n        refreshTokenAPI({\n            refreshToken: refreshToken,\n        }).then((data) => {\n            setToken(data.accessToken);\n            localStorage.setItem('token', data.accessToken);\n            localStorage.setItem('refreshToken', data.refreshToken);\n            const remainingTime = localStorage.getItem('remainingTime');\n            refreshTokenTimer = setTimeout(refreshTokenHandler, remainingTime);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (tokenData){\n            console.log(tokenData.duration);\n            refreshTokenTimer = setTimeout(refreshTokenHandler, tokenData.duration);\n        }\n    },[tokenData, refreshTokenHandler]);\n\n    const contextValue = {\n        token: token,\n        isLoggedIn: userIsLoggedIn,\n        login: loginHandler,\n        logout: logoutHandler,\n        refreshToken: refreshTokenHandler,\n    };\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthContext;","/Users/alexis/Desktop/drinkcipe/src/pages/StartingPage/StartingPage.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/PageNotFound.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/Login/Login.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/RecipeDetail/RecipeDetail.js",["156"],"import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Fragment, useState, useEffect } from 'react';\nimport LoadingPic from '../../components/images/components/loading.jpeg';\nimport MarkedRecipe from './components/marked/MarkedRecipe';\nimport { getItemsOfRecipe, getSingleRecipe } from '../../components/lib/api';\nimport { getImageURL } from '../../components/images/getImage/GetImageURL';\n\nconst RecipeDetail = () => {\n    const [singleRecipe, setSingleRecipe] = useState();\n    const [making, setMaking] = useState([]);\n    const [showPic, setShowPic] = useState();\n\n    const params = useParams();\n    const userId = localStorage.getItem('userId');\n\n    useEffect(() => {\n        getSingleRecipe(params.recipeId).then(res => {\n        \n            if (res.author.id+'' === userId) {\n                res['showBtn'] = true;\n            } else {\n                res['showBtn'] = false;\n            }\n\n            setSingleRecipe(res);\n\n            if (res.imageIds.length === 0) {\n                setShowPic(LoadingPic);\n            } else if (res.imageIds.length > 0) {\n                for (let i = 0; i < res.imageIds.length ; i++){\n                    const id = res.imageIds[i].imageId;\n\n                    setShowPic(getImageURL(id));\n                }\n            };\n        });\n        getItemsOfRecipe(params.recipeId).then(res => setMaking(res));\n    }, [params, userId]);\n\n    // const { state } = useLocation();\n\n    // useEffect(() => {\n    //     // TODO: use cache recipe data if recipe data is null refectch data with params id \n    //     if (state) {\n    //         getSingleRecipe(state).then(res => setSingleRecipe(res));\n    //         getItemsOfRecipe(state).then(res => setMaking(res));\n    //     }\n    // }, [state]);\n\n    return(\n        <Fragment>\n            {(singleRecipe !== undefined) ? \n                <MarkedRecipe \n                    recipeId={params.recipeId}\n                    drinkName={singleRecipe.name} \n                    userId={singleRecipe.author.id}\n                    bartender={singleRecipe.author.username}\n                    showBtn={singleRecipe.showBtn}\n                    image={showPic}\n                    making={making.map(({ingredient, volume, unit}) => (\n                        <li key={ingredient}>{ingredient} {volume} {unit}</li>\n                    ))} \n                    description={singleRecipe.description}\n                />\n                \n            : 'NO DRINK-CIPE FOUND!'}\n            <Outlet />\n        </Fragment>\n    )\n};\n\nexport default RecipeDetail;","/Users/alexis/Desktop/drinkcipe/src/pages/MyRecipes/MyRecipes.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/Profile/Profile.js",["157"],"import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getImageURL } from '../../components/images/getImage/GetImageURL';\nimport GetMyImage from '../../components/images/getImage/GetMyImage';\nimport { addUserImage, userProfile } from '../../components/lib/api';\nimport classes from './Profile.module.css';\n\nconst Profile = () => {\n    const [username, setUsername] = useState(null);\n    const defaultImage = 'https://www.allthetests.com/quiz22/picture/pic_1171831236_1.png';\n    const [file, setFile] = useState();\n    const [showPic, setShowPic] = useState(defaultImage);\n\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        userProfile().then(res => {\n            setUsername(res.username);\n        });\n    }, [username]);\n    \n    const fileSelectedHandler = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    const fileSubmitHandler = (event) => {\n        event.preventDefault();\n        const formData = new FormData();\n        \n        if (file.size > 1024 * 1000 * 5){\n            alert('size exceeded!');\n            return;\n        };\n\n        formData.append('file', file);\n\n        const data = { \n            method: 'POST',\n            body: formData,\n            headers: {\n                // 'Content-Type': 'multipart/form-data',\n                'Authorization': 'Bearer ' + token,\n            },\n        };\n\n        addUserImage(data).then(res => {\n            setShowPic(getImageURL(res.imageId));\n        })\n    };\n\n\n    return (\n        <div className={classes.control}>\n            <h1>Hello, {username}!</h1>\n            <div className={classes.img}>\n                <GetMyImage />\n                <input type='file' onChange={fileSelectedHandler} />\n                {file !== defaultImage ? (\n                    <button className='btn' type='submit' onClick={fileSubmitHandler}>\n                        Confirm Pic Change\n                    </button>\n                ) : null}\n            </div>\n            <br />\n            <NavLink to='/profile/edit-info'>\n                <button className='btn'>Edit Personal Info</button> \n            </NavLink>\n        </div>\n    );\n};\n\nexport default Profile;","/Users/alexis/Desktop/drinkcipe/src/pages/Profile/EditInfo.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/FellowBartenders/FellowBartenders/FellowBartenders.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/comments/comments/Comments.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/MyRecipes/components/form/edit/EditYourTwist.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/lib/api.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/layout/Layout/Layout.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/MyRecipes/components/form/create/AddYourTwist.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/images/getImage/GetImageURL.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/RecipeDetail/components/marked/MarkedRecipe.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/Recipes/components/item/RecipeItem.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/UI/Toggle/ToggleSwitch.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/layout/Navigation/MainNavigation.js",["158","159","160","161","162"],"import { useContext, useState, useEffect } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport AuthContext from '../../../store/auth-context';\nimport WebSocketContext from '../../../store/websocket-context';\nimport bellBtn from '../../images/components/bell.png';\nimport notiBtn from '../../images/components/notification.png';\nimport { getImageURL } from '../../images/getImage/GetImageURL';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const ctx = useContext(AuthContext);\n  const webCtx = useContext(WebSocketContext);\n\n  const isLoggedIn = ctx.isLoggedIn;\n\n  const [showModal, setShowModal] = useState(false);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notifications, setNotifications] = useState();\n\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    webCtx.subscribeHandler(notificationHandler);\n  }, [])\n\n  const removeIsReadElm = (newArr, oldArr) => {\n    for(let i = 0 ; oldArr.length ; i++){\n      for(let newNoti of newArr){\n        if(oldArr[i].id == newNoti.id){\n          oldArr.slice(i, i+1);\n        }\n      }\n    }\n  }\n  const setShowNotificationHandler = (data) =>{\n    if((data.unreadInvites !== null && data.unreadInvites.length > 0) || (data.unreadShareRecipes !== null && data.unreadShareRecipes.length > 0 )){\n      setShowNotification(true);\n    }\n  }\n\n  const notificationHandler = (data)  => {\n    if(notifications == undefined){\n      setNotifications(data);\n      setShowNotificationHandler(data);\n    }else{\n        //  update local cache\n        // 1. unread -> read \n        // 2. other no change\n        // 1. sync invites\n        removeIsReadElm(data.unreadInvites, notifications.unreadInvites);\n        removeIsReadElm(data.unreadShareRecipes, notifications.unreadShareRecipes);\n        notifications.unreadInvites.concat(data.unreadInvites);\n        notifications.unreadShareRecipes.concat(data.unreadShareRecipes);\n        setShowNotificationHandler(notifications);\n        setNotifications(notifications);\n    }\n    \n  };\n\n  const openBellHandler = (event) => {\n    event.preventDefault();\n\n    setShowModal((prev) => !prev);\n  };\n\n  const navInviteHandler = () => {\n    navigate('/fellow-bartenders/search');\n  };\n\n  const navRecipeHandler = (recipeId) => {\n    navigate(`/recipes/${recipeId}`);\n  };\n\n  const logoutHandler = () => {\n    ctx.logout();\n    webCtx.disconnect();\n  };\n\n  // const bellShape = () => {\n  //   let isUnread = false;\n  //   if(Array.isArray(notifications.unreadInvites)){\n  //     for(let invite of notifications.unreadInvites){\n  //         if(invite.isRead){\n  //           isUnread = true;\n  //         }\n  //     }\n  //   }\n  //   if(isUnread) return <img src={notiBtn} alt='' />;\n  //   if(Array.isArray(notifications.unreadShareRecipes)){\n  //     for(let share of notifications.unreadShareRecipes){\n  //         if(share.isRead){\n  //           isUnread = true;\n  //         }\n  //     }\n  //   }\n  //   return !isUnread ? <img src={bellBtn} alt='' /> : <img src={notiBtn} alt='' />;\n  // };\n    \n  return (\n    <header className={classes.header}>\n      <NavLink to='/' className={classes.logonav}>\n        <div className={classes.logo}>DRINK-CIPE</div>\n      </NavLink>\n      <nav className={classes.nav}>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <NavLink to='/login' className={navData => navData.isActive ? classes.active : '' }>\n                Login\n              </NavLink>\n            </li>\n          )}\n          {isLoggedIn && (\n            <ul>\n              <li>\n                <NavLink to='/recipes' className={navData => navData.isActive ? classes.active : '' }>\n                  Recipes\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to='/my-recipes' className={navData => navData.isActive ? classes.active : '' }>\n                  My Recipes\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to='/fellow-bartenders' className={navData => navData.isActive ? classes.active : '' }>\n                  Fellow Bartenders\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to='/profile' className={navData => navData.isActive ? classes.active : '' }>\n                  Profile\n                </NavLink>\n              </li>\n              <li>\n                <button className={classes.bell} onClick={openBellHandler}>\n                  {(notifications !== undefined && showNotification) ? <img src={notiBtn} alt='' /> : <img src={bellBtn} alt='' />}\n                </button>\n                {showModal && \n                  <div className={classes.notifications}>\n                    {(notifications !== undefined) ? \n                      <div className={classes.container}>\n                        <div>\n                          <h5>Invitation</h5>\n                          {(!Array.isArray(notifications.unreadInvites) || !notifications.unreadInvites.length) ? \n                            <p>No New Invitation At The Moment.</p>\n                          : \n                            (notifications.unreadInvites.map((invite) => {\n                              if (invite.isRead === false) {\n                                return (\n                                  <div className={classes.image} key={invite.id}>\n                                    <img src={getImageURL(invite.fromUserImageId)} alt='' />\n                                    <button onClick={navInviteHandler}>{invite.fromUserName} sent you a friend request!</button>\n                                  </div>\n                                )\n                              }\n                            }))\n                          }\n                        </div>\n                        <div>\n                          <h5>Sharing</h5>\n                          {(!Array.isArray(notifications.unreadShareRecipes) || !notifications.unreadShareRecipes.length) ? \n                            <p>No New Sharing At The Moment.</p>\n                          : \n                            (notifications.unreadShareRecipes.map((share) => {\n                              if (share.isRead === false) {\n                                return (\n                                  <div className={classes.image} key={share.id}>\n                                    <img src={getImageURL(share.fromUserImage)} alt='' />\n                                    <button onClick={() => navRecipeHandler(share.recipeId)}>{share.fromUserName} shared a recipe with you!</button>\n                                  </div>\n                                )\n                              }\n                            }))\n                          }\n                        </div>\n                      </div>\n                    : <p>No Unread Messages At The Moment.</p>}\n                  </div>\n                }\n              </li>\n              <li>\n                <button className={classes.logout} onClick={logoutHandler}>Logout</button>\n              </li>\n            </ul>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n\n","/Users/alexis/Desktop/drinkcipe/src/components/UI/Modal/Modal.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/UI/Backdrop/Backdrop.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/UI/Card/Card.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/comments/components/rating/UserRatings.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/comments/components/form/NewCommentForm.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/upload/UploadRecipePic.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/comments/components/item/CommentItem.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/images/getImage/GetMyImage.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/FellowBartenders/SearchBartenders/SearchBartenders.js",[],"/Users/alexis/Desktop/drinkcipe/src/components/UI/Modal/OkModal.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/FellowBartenders/Invitation/Invitation.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/Recipes/Recipes/RecipeHome/Recipes.js",[],"/Users/alexis/Desktop/drinkcipe/src/pages/Recipes/Recipes/RecipesByUserId/UserRecipes.js",["163"],"import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getRecipesByUserId } from \"../../../../components/lib/api\";\nimport { getImageURL } from '../../../../components/images/getImage/GetImageURL';\nimport LoadingPic from '../../../../components/images/components/loading.jpeg';\nimport RecipeItem from \"../../components/item/RecipeItem\";\nimport classes from './UserRecipes.module.css';\n\nconst UserRecipes = () => {\n    const [recipes, setRecipes] = useState([]);\n    const [username, setUsername] = useState();\n    const [userImage, setUserImage] = useState();\n    const [showPic, setShowPic] = useState();\n    const params = useParams();\n\n    useEffect(() => {\n        getRecipesByUserId(params.userId).then(recipes => {\n            setUsername(recipes[0].author.username);\n\n            if (recipes[0].author.userImage !== null) {\n                setUserImage(getImageURL(recipes[0].author.userImage.imageId));\n            };\n\n            setRecipes(recipes);\n\n            for (let i = 0; i < recipes.length ; i++) {\n                if (recipes[i].imageIds.length === 0) {\n                    setShowPic(LoadingPic);\n                } else if (recipes[i].imageIds.length > 0) {\n                    for (let n = 0; n < recipes[i].imageIds.length ; i++){\n                        const id = recipes[i].imageIds[n].imageId;\n    \n                        setShowPic(getImageURL(id));\n                    }\n                };\n            }\n        });\n    }, []);\n\n    return (\n        <div className={classes.container}>\n            <h1><img className={classes.userImg} src={userImage} alt='' /> {username}</h1>\n            <br />\n            {(recipes.length !== 0) ? recipes.map((recipe) => {\n                return (\n                    <div key={recipe.id}>\n                        <RecipeItem\n                            id={recipe.id}\n                            drinkName={recipe.name}\n                            bartender={recipe.author.username}\n                            image={showPic}\n                        />\n                    </div>\n                    \n            )}) : <h4>No Notifications At The Moment.</h4>}\n        </div>\n    )\n};\n\nexport default UserRecipes;","/Users/alexis/Desktop/drinkcipe/src/pages/Share/Share.js",[],"/Users/alexis/Desktop/drinkcipe/src/store/websocket-context.js",["164","165","166"],"import React, { useState, useEffect } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { getSingleRecipe } from '../components/lib/api';\n\nconst SOCKET_URL = 'http://localhost:8080/ws';\n\nconst WebSocketContext = React.createContext({\n    isConnect: false,\n    connect: () => {},\n    disconnect: () => {},\n    send: () => {},\n    subscribeHandler: () => {},\n    unSubscribeHandler: () => {}\n});\n\nlet stompClient;\nlet subscribeFns = [];\n\nexport const WebSocketContextProvider = (props) =>{\n    const [isConnect, setIsConnect] = useState(false);\n    // const [stompClient, setStompClient] = useState(undefined);\n\n    const connect = ()=>{\n        let Sock = new SockJS(SOCKET_URL);\n        stompClient = over(Sock);\n        // stompClient.debug = null\n        stompClient.connect({\"Authorization\": 'Bearer '+localStorage.getItem('token')}, onConnected, onError);\n    };\n    const sleep = ms => new Promise(r => setTimeout(r, ms));\n\n    const onConnected = () => {\n        stompClient.subscribe('/user/topic/notification', onMessageReceived);\n        setIsConnect(true);\n        setTimeout(send({}), 10000);\n    }\n\n    const onError = (err) => {\n        console.log(err);   \n    }\n\n    const subscribeHandler = (fn) =>{\n        let isFound = false;\n        for(let f of subscribeFns){\n            if(f.callback === fn){\n                isFound = true;\n            }\n        }\n        if(!isFound){\n            subscribeFns.push({callback : fn});\n        }\n    }\n\n    const unSubscribeHandler = (fn) =>{\n        for(let i = 0 ; i < subscribeFns.length ; i++){\n            let f = subscribeFns[i];\n            if(f.callback === fn){\n                subscribeFns.splice( i, 1 );\n            }\n        }\n    }\n\n    const onMessageReceived = (payload)=>{\n        for(let f of subscribeFns){\n            f.callback(JSON.parse(payload.body));\n        }\n    }\n\n    const send = (data) => {\n        stompClient.send(\"/message/client\", {\"Authorization\": 'Bearer '+localStorage.getItem('token')}, data);\n    }\n\n    const disconnect = () =>{\n        stompClient.disconnect(() => {\n            console.log('User log out');\n        })\n        setIsConnect(false);\n    }\n\n    useEffect(() => {\n        if (!isConnect){\n            let con = localStorage.getItem('token');\n            \n            if(con !== 'undefined' && con !== null){\n                setIsConnect(con);\n                connect();\n            }\n        }\n    },[isConnect]);\n\n    const contextValue = {\n        isConnect: isConnect,\n        connect: connect,\n        disconnect: disconnect,\n        send: send,\n        subscribeHandler: subscribeHandler,\n        unSubscribeHandler: unSubscribeHandler\n    };\n\n    return (\n        <WebSocketContext.Provider value={contextValue}>\n            {props.children}\n        </WebSocketContext.Provider>\n    );\n}\n\nexport default WebSocketContext;",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":5,"column":5,"nodeType":"173","messageId":"174","endLine":5,"endColumn":22},{"ruleId":"171","severity":1,"message":"175","line":1,"column":18,"nodeType":"173","messageId":"174","endLine":1,"endColumn":29},{"ruleId":"171","severity":1,"message":"176","line":12,"column":12,"nodeType":"173","messageId":"174","endLine":12,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":24,"column":6,"nodeType":"179","endLine":24,"endColumn":8,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":29,"column":25,"nodeType":"183","messageId":"184","endLine":29,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":42,"column":22,"nodeType":"183","messageId":"184","endLine":42,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":148,"column":71,"nodeType":"187","messageId":"188","endLine":148,"endColumn":73},{"ruleId":"185","severity":1,"message":"186","line":165,"column":75,"nodeType":"187","messageId":"188","endLine":165,"endColumn":77},{"ruleId":"177","severity":1,"message":"189","line":38,"column":8,"nodeType":"179","endLine":38,"endColumn":10,"suggestions":"190"},{"ruleId":"171","severity":1,"message":"191","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":30,"column":11,"nodeType":"173","messageId":"174","endLine":30,"endColumn":16},{"ruleId":"177","severity":1,"message":"193","line":89,"column":7,"nodeType":"179","endLine":89,"endColumn":18,"suggestions":"194"},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'refreshTokenTimer' is assigned a value but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'showPic' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'notificationHandler' and 'webCtx'. Either include them or remove the dependency array.","ArrayExpression",["197"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'params.userId'. Either include it or remove the dependency array.",["198"],"'getSingleRecipe' is defined but never used.","'sleep' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'connect'. Either include it or remove the dependency array.",["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [notificationHandler, webCtx]",{"range":"206","text":"207"},"Update the dependencies array to be: [params.userId]",{"range":"208","text":"209"},"Update the dependencies array to be: [connect, isConnect]",{"range":"210","text":"211"},[916,918],"[notificationHandler, webCtx]",[1496,1498],"[params.userId]",[2450,2461],"[connect, isConnect]"]
