{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/duo/src/pages/Recipes/components/form/InputField.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputField = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState([{\n    ingredient: '',\n    volume: ''\n  }]);\n\n  const inputChangeHandler = (i, event) => {\n    const newInputValue = [...inputValue];\n    newInputValue[i][event.target.name] = event.target.value;\n    setInputValue(newInputValue);\n  };\n\n  const addInputFieldHandler = () => {\n    setInputValue([...inputValue, {\n      ingredient: '',\n      email: ''\n    }]);\n  };\n\n  const removeInputFieldHander = i => {\n    const newInputValue = [...inputValue];\n    newInputValue.splice(i, 1);\n    setInputValue(newInputValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [inputValue.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ingredient\",\n        value: element.ingredient || \"\",\n        onChange: e => inputChangeHandler(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"volume\",\n        value: element.volume || \"\",\n        onChange: e => inputChangeHandler(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => removeInputFieldHander(index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this) : null]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addInputFieldHandler,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputField, \"GvMeebN0ReOj7rNdtd7pct44N9o=\");\n\n_c = InputField;\nexport default InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/alexis/Desktop/duo/src/pages/Recipes/components/form/InputField.js"],"names":["useState","InputField","inputValue","setInputValue","ingredient","volume","inputChangeHandler","i","event","newInputValue","target","name","value","addInputFieldHandler","email","removeInputFieldHander","splice","map","element","index","e"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,CAAC;AAAEI,IAAAA,UAAU,EAAE,EAAd;AAAkBC,IAAAA,MAAM,EAAG;AAA3B,GAAD,CAAD,CAA5C;;AAEA,QAAMC,kBAAkB,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACrC,UAAMC,aAAa,GAAG,CAAC,GAAGP,UAAJ,CAAtB;AACAO,IAAAA,aAAa,CAACF,CAAD,CAAb,CAAiBC,KAAK,CAACE,MAAN,CAAaC,IAA9B,IAAsCH,KAAK,CAACE,MAAN,CAAaE,KAAnD;AACAT,IAAAA,aAAa,CAACM,aAAD,CAAb;AACH,GAJD;;AAMA,QAAMI,oBAAoB,GAAG,MAAM;AAC/BV,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgB;AAAEE,MAAAA,UAAU,EAAE,EAAd;AAAkBU,MAAAA,KAAK,EAAE;AAAzB,KAAhB,CAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,sBAAsB,GAAIR,CAAD,IAAO;AAClC,UAAME,aAAa,GAAG,CAAC,GAAGP,UAAJ,CAAtB;AACAO,IAAAA,aAAa,CAACO,MAAd,CAAqBT,CAArB,EAAwB,CAAxB;AACAJ,IAAAA,aAAa,CAACM,aAAD,CAAb;AACH,GAJD;;AAMA,sBACI;AAAA,eACKP,UAAU,CAACe,GAAX,CAAe,CAACC,OAAD,EAAUC,KAAV,kBACZ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,YAAxB;AAAqC,QAAA,KAAK,EAAED,OAAO,CAACd,UAAR,IAAsB,EAAlE;AAAsE,QAAA,QAAQ,EAAEgB,CAAC,IAAId,kBAAkB,CAACa,KAAD,EAAQC,CAAR;AAAvG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAEF,OAAO,CAACb,MAAR,IAAkB,EAA1D;AAA8D,QAAA,QAAQ,EAAEe,CAAC,IAAId,kBAAkB,CAACa,KAAD,EAAQC,CAAR;AAA/F;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKKD,KAAK,gBACF;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMJ,sBAAsB,CAACI,KAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,GAEA,IAPV;AAAA,OAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAaI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEN,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAtCD;;GAAMZ,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import { useState } from 'react';\n\nconst InputField = () => {\n    const [inputValue, setInputValue] = useState([{ ingredient: '', volume : '' }])\n\n    const inputChangeHandler = (i, event) => {\n        const newInputValue = [...inputValue];\n        newInputValue[i][event.target.name] = event.target.value;\n        setInputValue(newInputValue);\n    };\n\n    const addInputFieldHandler = () => {\n        setInputValue([...inputValue, { ingredient: '', email: '' }])\n    };\n\n    const removeInputFieldHander = (i) => {\n        const newInputValue = [...inputValue]; \n        newInputValue.splice(i, 1);\n        setInputValue(newInputValue);\n    };\n\n    return (\n        <div>\n            {inputValue.map((element, index) => (\n                <div key={index}>\n                    <label>Ingredient</label>\n                    <input type='text' name='ingredient' value={element.ingredient || \"\"} onChange={e => inputChangeHandler(index, e)} />\n                    <label>Email</label>\n                    <input type='text' name='volume' value={element.volume || \"\"} onChange={e => inputChangeHandler(index, e)} />\n                    {index ? \n                        <button type='button' onClick={() => removeInputFieldHander(index)}>Remove</button> \n                        : null\n                    }\n                </div>\n            ))}\n            <div className=\"button-section\">\n                <button type='button' onClick={addInputFieldHandler}>Add</button>\n            </div>\n        </div>\n    )\n};\n\nexport default InputField;"]},"metadata":{},"sourceType":"module"}