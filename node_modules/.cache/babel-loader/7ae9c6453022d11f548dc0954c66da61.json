{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/duo/src/pages/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\nimport classes from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confrimPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLogin, setIsLogin] = useState(true);\n  const ctx = useContext(AuthContext);\n\n  const usernameChangeHandler = event => {\n    event.preventDefault();\n    setUsername(event.target.value);\n  };\n\n  const emailChangeHandler = event => {\n    event.preventDefault();\n    setEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    event.preventDefault();\n    setPassword(event.target.value);\n  };\n\n  const confirmPasswordChangeHandler = event => {\n    event.preventDefault();\n    setConfirmPassword(event.target.value);\n  };\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const dataFetchHandler = (url, params) => {\n      fetch(url, params).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then(data => {\n            let errorMessage = 'Authentication failed!';\n            throw new Error(errorMessage);\n          });\n        }\n\n        ;\n      }).then(() => {\n        navigate('/');\n      }).catch(err => {\n        alert(err.message);\n      });\n    };\n\n    setIsLoading(true);\n\n    if (isLogin) {\n      dataFetchHandler('http://localhost:8080/api/auth/signin', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: email,\n          password: password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } else {\n      if (confrimPassword !== password) {\n        let errorMessage = 'Authentication failed!';\n        return alert(errorMessage);\n      }\n\n      ;\n      dataFetchHandler('http://localhost:8080/api/auth/signup', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: username,\n          email: email,\n          password: password,\n          role: ['ROLE_USER']\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: username,\n          minLength: \"2\",\n          required: true,\n          onChange: usernameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          required: true,\n          onChange: emailChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          required: true,\n          onChange: passwordChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          required: true,\n          onChange: confirmPasswordChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"/iaLEIU/1IHsWPoAj4k81xGehvg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/alexis/Desktop/duo/src/pages/Login/Login.js"],"names":["useState","useContext","useNavigate","AuthContext","classes","Login","navigate","username","setUsername","email","setEmail","password","setPassword","confrimPassword","setConfirmPassword","isLoading","setIsLoading","isLogin","setIsLogin","ctx","usernameChangeHandler","event","preventDefault","target","value","emailChangeHandler","passwordChangeHandler","confirmPasswordChangeHandler","switchAuthModeHandler","prevState","submitHandler","dataFetchHandler","url","params","fetch","then","res","ok","json","data","errorMessage","Error","catch","err","alert","message","method","body","JSON","stringify","headers","role","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\nimport classes from './Login.module.css';\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confrimPassword, setConfirmPassword] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isLogin, setIsLogin] = useState(true);\n\n    const ctx = useContext(AuthContext);\n\n    const usernameChangeHandler = (event) => {\n        event.preventDefault();\n        setUsername(event.target.value);\n    };\n    \n    const emailChangeHandler = (event) => {\n        event.preventDefault();\n        setEmail(event.target.value);\n    };\n\n    const passwordChangeHandler = (event) => {\n        event.preventDefault();\n        setPassword(event.target.value);\n    };\n\n    const confirmPasswordChangeHandler = (event) => {\n        event.preventDefault();\n        setConfirmPassword(event.target.value);\n    };\n\n    const switchAuthModeHandler = () => {\n        setIsLogin((prevState) => !prevState);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const dataFetchHandler = (url, params) => {\n            fetch(url, params).then((res) => {\n                setIsLoading(false);\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return res.json().then((data) => {\n                        let errorMessage = 'Authentication failed!';\n                        \n                        throw new Error(errorMessage);\n                    });\n                };\n            }).then(() => {\n                navigate('/');\n            })\n            .catch((err) => {\n                alert(err.message);\n            });\n        };\n\n        setIsLoading(true);\n        \n        if (isLogin) {\n            dataFetchHandler('http://localhost:8080/api/auth/signin', {\n                method: 'POST',\n                body: JSON.stringify({\n                    email: email,\n                    password: password,\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n        } else {\n            if (confrimPassword !== password) {\n                let errorMessage = 'Authentication failed!';\n                return alert(errorMessage);\n            };\n\n            dataFetchHandler('http://localhost:8080/api/auth/signup', {\n                method: 'POST',\n                body: JSON.stringify({\n                    username: username,\n                    email: email,\n                    password: password,\n                    role: ['ROLE_USER'],\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n        };\n    };\n\n    return (\n        <section className={classes.auth}>\n            <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n            <form onSubmit={submitHandler}>\n                {!isLogin && (\n                    <div className={classes.control}>\n                        <label htmlFor='username'>Username</label>\n                        <input\n                            type='text'\n                            name='username'\n                            value={username}\n                            minLength='2'\n                            required\n                            onChange={usernameChangeHandler}\n                        />\n                    </div>\n                )}\n                <div className={classes.control}>\n                    <label htmlFor='email'>Your Email</label>\n                    <input \n                        type='email' \n                        name='email' \n                        value={email}\n                        required \n                        onChange={emailChangeHandler}\n                    />\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='password'>Your Password</label>\n                    <input\n                        type='password'\n                        name='password'\n                        value={password}\n                        required\n                        onChange={passwordChangeHandler}\n                    />\n                </div>\n                {!isLogin && (\n                    <div className={classes.control}>\n                        <label htmlFor='password'>Confirm Password</label>\n                        <input\n                            type='password'\n                            name='confirmPassword'\n                            required\n                            onChange={confirmPasswordChangeHandler}\n                        />\n                    </div>\n                )}\n                <div className={classes.actions}>\n                    {!isLoading && (<button>{isLogin ? 'Login' : 'Create Account'}</button>)}\n                    {isLoading && <p>Sending request...</p>}\n                    <button\n                        type='button'\n                        className={classes.toggle}\n                        onClick={switchAuthModeHandler}\n                    >\n                        {isLogin ? 'Create new account' : 'Login with existing account'}\n                    </button>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}