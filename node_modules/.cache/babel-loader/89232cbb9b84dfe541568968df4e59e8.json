{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/duo/src/components/comments/components/form/NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport classes from './NewCommentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = () => {\n  _s();\n\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [commentInput, setCommentInput] = useState('');\n\n  const updateCommentHandler = event => {\n    event.preventDefault();\n    setCommentInput(event.target.value);\n  };\n\n  const submitFormHandler = event => {\n    event.preventDefault(); // optional: Could validate here\n\n    if (commentInput === '') {\n      alert('Please share your opinion!');\n      return;\n    }\n\n    ; // send comment to server\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your thoughts?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rating,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Rate this DRINK-CIPE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), [...Array(5)].map((star, index) => {\n          index += 1;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: index <= (hover || rating) ? \"on\" : \"off\",\n            onClick: () => setRating(index),\n            onMouseEnter: () => setHover(index),\n            onMouseLeave: () => setHover(rating),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"star\",\n              children: \"\\u2605\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [rating, \" of 5 stars\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"3\",\n        onChange: updateCommentHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"rtXTLgWs1KpMktzI5p8btKgIKms=\");\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["/Users/alexis/Desktop/duo/src/components/comments/components/form/NewCommentForm.js"],"names":["useState","classes","NewCommentForm","rating","setRating","hover","setHover","commentInput","setCommentInput","updateCommentHandler","event","preventDefault","target","value","submitFormHandler","alert","form","control","Array","map","star","index","actions"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMS,oBAAoB,GAAIC,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,eAAe,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAf;AACD,GAHD;;AAKA,QAAMC,iBAAiB,GAAIJ,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN,GADmC,CAGnC;;AACA,QAAIJ,YAAY,KAAK,EAArB,EAAyB;AACvBQ,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACA;AACD;;AAAA,KAPkC,CAQnC;AACD,GATD;;AAWA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACe,IAAzB;AAA+B,IAAA,QAAQ,EAAEF,iBAAzC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEb,OAAO,CAACgB,OAAxB;AAAiC,MAAA,QAAQ,EAAEH,iBAA3C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEb,OAAO,CAACE,MAAxB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,CAAC,GAAGe,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClCA,UAAAA,KAAK,IAAI,CAAT;AACA,8BACE;AACE,YAAA,IAAI,EAAC,QADP;AAGE,YAAA,SAAS,EAAEA,KAAK,KAAKhB,KAAK,IAAIF,MAAd,CAAL,GAA6B,IAA7B,GAAoC,KAHjD;AAIE,YAAA,OAAO,EAAE,MAAMC,SAAS,CAACiB,KAAD,CAJ1B;AAKE,YAAA,YAAY,EAAE,MAAMf,QAAQ,CAACe,KAAD,CAL9B;AAME,YAAA,YAAY,EAAE,MAAMf,QAAQ,CAACH,MAAD,CAN9B;AAAA,mCAQE;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARF,aAEOkB,KAFP;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD,SAdA,CAFH,eAiBE;AAAA,qBACGlB,MADH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAuBE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,GAA5B;AAAgC,QAAA,QAAQ,EAAEM;AAA1C;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAK,MAAA,SAAS,EAAER,OAAO,CAACqB,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CArDD;;GAAMpB,c;;KAAAA,c;AAuDN,eAAeA,cAAf","sourcesContent":["import { useState } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = () => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [commentInput, setCommentInput] = useState('');\n\n  const updateCommentHandler = (event) => {\n    event.preventDefault();\n    setCommentInput(event.target.value);\n  };\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n    if (commentInput === '') {\n      alert('Please share your opinion!');\n      return;\n    };\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your thoughts?</label>\n        <div className={classes.rating}>\n          <span>Rate this DRINK-CIPE</span>\n          {[...Array(5)].map((star, index) => {\n            index += 1;\n            return (\n              <button\n                type=\"button\"\n                key={index}\n                className={index <= (hover || rating) ? \"on\" : \"off\"}\n                onClick={() => setRating(index)}\n                onMouseEnter={() => setHover(index)}\n                onMouseLeave={() => setHover(rating)}\n              >\n                <span className=\"star\">&#9733;</span>\n              </button>\n            );\n          })}\n          <p>\n            {rating} of 5 stars\n          </p>\n        </div>\n        <textarea id='comment' rows='3' onChange={updateCommentHandler}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Publish</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"]},"metadata":{},"sourceType":"module"}