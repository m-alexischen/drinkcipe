{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/duo/src/pages/Recipes/components/form/RecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport Card from '../../../../components/UI/Card/Card';\nimport LoadingSpinner from '../../../../components/UI/LoadingSpinner/LoadingSpinner';\nimport Modal from '../../../../components/UI/Modal/Modal';\nimport Backdrop from '../../../../components/UI/Backdrop/Backdrop';\nimport classes from './RecipeForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = props => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [drinkNameInput, setDrinkNameInput] = useState('');\n  const [bartenderInput, setBartenderInput] = useState(''); // const drinkNameInputRef = useRef();\n  // const bartenderInputRef = useRef();\n\n  const showModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  const updatedrinkNameHandler = event => {\n    event.preventDefault();\n    setDrinkNameInput(event.target.value);\n  };\n\n  const updateBartenderHandler = event => {\n    event.preventDefault();\n    setBartenderInput(event.target.value);\n  };\n\n  const checkFormHandler = event => {\n    event.preventDefault(); // const enteredDrinkName = drinkNameInputRef.current.value;\n    // const enteredBartender = bartenderInputRef.current.value;\n    // const notValid = (enteredDrinkName.trim() === '' || enteredBartender.trim() === '');\n    // if (notValid) {\n    //   alert('Please fill out whole form!');\n    //   return;\n    // } else {\n    //   showModalHandler();\n    // };\n\n    if (drinkNameInput === '' || bartenderInput === '') {\n      alert('please');\n      return;\n    } else {\n      console.log(drinkNameInput, bartenderInput);\n    }\n  };\n\n  const submitFormHandler = event => {\n    event.preventDefault(); // const enteredDrinkName = drinkNameInputRef.current.value;\n    // const enteredBartender = bartenderInputRef.current.value;\n\n    props.onAddRecipe({\n      drinkName: drinkNameInput,\n      bartender: bartenderInput\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitFormHandler,\n      children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loading,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"drinkName\",\n          children: \"Drink Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"drinkName\",\n          onChange: updatedrinkNameHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bartender\",\n          children: \"Bartender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"bartender\",\n          onChange: updateBartenderHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"button\",\n          onClick: checkFormHandler,\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n          onConfirm: submitFormHandler,\n          onCancel: closeModalHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), showModal && /*#__PURE__*/_jsxDEV(Backdrop, {\n          onCancel: closeModalHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeForm, \"7ImkfTliu9C2QC8xp/Xdq/Jtp3c=\");\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/Users/alexis/Desktop/duo/src/pages/Recipes/components/form/RecipeForm.js"],"names":["useState","useRef","Card","LoadingSpinner","Modal","Backdrop","classes","RecipeForm","props","showModal","setShowModal","drinkNameInput","setDrinkNameInput","bartenderInput","setBartenderInput","showModalHandler","closeModalHandler","updatedrinkNameHandler","event","preventDefault","target","value","updateBartenderHandler","checkFormHandler","alert","console","log","submitFormHandler","onAddRecipe","drinkName","bartender","form","isLoading","loading","control","actions"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,OAAOC,QAAP,MAAqB,6CAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD,CAH4B,CAI5B;AACA;;AAEA,QAAMe,gBAAgB,GAAG,MAAK;AAC5BL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMM,iBAAiB,GAAG,MAAM;AAC9BN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMO,sBAAsB,GAAIC,KAAD,IAAW;AACxCA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,iBAAiB,CAACM,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAjB;AACD,GAHD;;AAKA,QAAMC,sBAAsB,GAAIJ,KAAD,IAAW;AACxCA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,iBAAiB,CAACI,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAjB;AACD,GAHD;;AAKA,QAAME,gBAAgB,GAAIL,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,cAAN,GADkC,CAGlC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIR,cAAc,KAAK,EAAnB,IAAyBE,cAAc,KAAK,EAAhD,EAAoD;AAClDW,MAAAA,KAAK,CAAC,QAAD,CAAL;AACA;AACD,KAHD,MAGO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYf,cAAZ,EAA4BE,cAA5B;AACD;AACF,GAnBD;;AAqBA,QAAMc,iBAAiB,GAAIT,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN,GADmC,CAGnC;AACA;;AAEAX,IAAAA,KAAK,CAACoB,WAAN,CAAkB;AAAEC,MAAAA,SAAS,EAAElB,cAAb;AAA6BmB,MAAAA,SAAS,EAAEjB;AAAxC,KAAlB;AACD,GAPD;;AASA,sBACE,QAAC,IAAD;AAAA,2BACE;AAAM,MAAA,SAAS,EAAEP,OAAO,CAACyB,IAAzB;AAA+B,MAAA,QAAQ,EAAEJ,iBAAzC;AAAA,iBACGnB,KAAK,CAACwB,SAAN,iBACC;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAAC2B,OAAxB;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAME;AAAK,QAAA,SAAS,EAAE3B,OAAO,CAAC4B,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,WAAtB;AAAkC,UAAA,QAAQ,EAAEjB;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAUE;AAAK,QAAA,SAAS,EAAEX,OAAO,CAAC4B,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,WAAtB;AAAkC,UAAA,QAAQ,EAAEZ;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAcE;AAAK,QAAA,SAAS,EAAEhB,OAAO,CAAC6B,OAAxB;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,IAAI,EAAC,QAA7B;AAAsC,UAAA,OAAO,EAAEZ,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGd,SAAS,iBAAI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEkB,iBAAlB;AAAqC,UAAA,QAAQ,EAAEX;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFhB,EAGGP,SAAS,iBAAI,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEO;AAApB;AAAA;AAAA;AAAA;AAAA,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA/ED;;GAAMT,U;;KAAAA,U;AAiFN,eAAeA,UAAf","sourcesContent":["import { useState, useRef } from 'react';\nimport Card from '../../../../components/UI/Card/Card';\nimport LoadingSpinner from '../../../../components/UI/LoadingSpinner/LoadingSpinner';\nimport Modal from '../../../../components/UI/Modal/Modal';\nimport Backdrop from '../../../../components/UI/Backdrop/Backdrop';\nimport classes from './RecipeForm.module.css';\n\nconst RecipeForm = (props) => {\n  const [showModal, setShowModal] = useState(false);\n  const [drinkNameInput, setDrinkNameInput] = useState('');\n  const [bartenderInput, setBartenderInput] = useState('');\n  // const drinkNameInputRef = useRef();\n  // const bartenderInputRef = useRef();\n\n  const showModalHandler = ()=> {\n    setShowModal(true);\n  };\n  \n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  const updatedrinkNameHandler = (event) => {\n    event.preventDefault();\n    setDrinkNameInput(event.target.value);\n  };\n\n  const updateBartenderHandler = (event) => {\n    event.preventDefault();\n    setBartenderInput(event.target.value);\n  };\n\n  const checkFormHandler = (event) => {\n    event.preventDefault();\n\n    // const enteredDrinkName = drinkNameInputRef.current.value;\n    // const enteredBartender = bartenderInputRef.current.value;\n  \n    // const notValid = (enteredDrinkName.trim() === '' || enteredBartender.trim() === '');\n    // if (notValid) {\n    //   alert('Please fill out whole form!');\n    //   return;\n    // } else {\n    //   showModalHandler();\n    // };\n    if (drinkNameInput === '' || bartenderInput === '') {\n      alert('please');\n      return;\n    } else {\n      console.log(drinkNameInput, bartenderInput);\n    }\n  };\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // const enteredDrinkName = drinkNameInputRef.current.value;\n    // const enteredBartender = bartenderInputRef.current.value;\n\n    props.onAddRecipe({ drinkName: drinkNameInput, bartender: bartenderInput });\n  };\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n        <div className={classes.control}>\n          <label htmlFor='drinkName'>Drink Name</label>\n          <input type='text' id='drinkName' onChange={updatedrinkNameHandler} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='bartender'>Bartender</label>\n          <input type='text' id='bartender' onChange={updateBartenderHandler} />\n        </div>\n        <div className={classes.actions}>\n          <button className='btn' type='button' onClick={checkFormHandler}>Add Recipe</button>\n          {showModal && <Modal onConfirm={submitFormHandler} onCancel={closeModalHandler} />}\n          {showModal && <Backdrop onCancel={closeModalHandler} />}\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default RecipeForm;\n"]},"metadata":{},"sourceType":"module"}