{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/duo/src/pages/Recipes/components/list/RecipeList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport RecipeItem from '../item/RecipeItem';\nimport classes from './RecipeList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeList = props => {\n  _s();\n\n  const [searchInput, setsearchInput] = useState('');\n\n  const changeHandler = event => {\n    event.preventDefault();\n    setsearchInput(event.target.value);\n  };\n\n  const filteredSearch = () => {\n    if (searchInput.length > 0) {\n      props.recipes.filter(recipe => {\n        return recipe.drinkName.toLowerCase().includes(searchInput.toLowerCase()) || recipe.bartender.toLowerCase().includes(searchInput.toLowerCase());\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search by Drink Name or Bartender\",\n      value: searchInput,\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: filteredSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), props.recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeItem, {\n        id: recipe.id,\n        drinkName: recipe.drinkName,\n        bartender: recipe.bartender\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeList, \"Vu4rzRET2zurdTRzRE2s1whfHDE=\");\n\n_c = RecipeList;\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/alexis/Desktop/duo/src/pages/Recipes/components/list/RecipeList.js"],"names":["Fragment","useState","RecipeItem","classes","RecipeList","props","searchInput","setsearchInput","changeHandler","event","preventDefault","target","value","filteredSearch","length","recipes","filter","recipe","drinkName","toLowerCase","includes","bartender","list","map","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEE,QAAMO,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,cAAc,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd;AACH,GAHD;;AAKA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIP,WAAW,CAACQ,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BT,MAAAA,KAAK,CAACU,OAAN,CAAcC,MAAd,CAAsBC,MAAD,IAAY;AAC/B,eACEA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCd,WAAW,CAACa,WAAZ,EAAxC,KACAF,MAAM,CAACI,SAAP,CAAiBF,WAAjB,GAA+BC,QAA/B,CAAwCd,WAAW,CAACa,WAAZ,EAAxC,CAFF;AAID,OALD;AAMD;;AAAA;AACF,GATD;;AAWF,sBACE,QAAC,QAAD;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,mCAFd;AAGE,MAAA,KAAK,EAAEb,WAHT;AAIE,MAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAI,MAAA,SAAS,EAAEL,OAAO,CAACmB,IAAvB;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAET,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGR,KAAK,CAACU,OAAN,CAAcQ,GAAd,CAAmBN,MAAD,iBACjB,QAAC,UAAD;AAEE,QAAA,EAAE,EAAEA,MAAM,CAACO,EAFb;AAGE,QAAA,SAAS,EAAEP,MAAM,CAACC,SAHpB;AAIE,QAAA,SAAS,EAAED,MAAM,CAACI;AAJpB,SACOJ,MAAM,CAACO,EADd;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxCD;;GAAMpB,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import { Fragment, useState } from 'react';\nimport RecipeItem from '../item/RecipeItem';\nimport classes from './RecipeList.module.css';\n\nconst RecipeList = (props) => {\n  const [searchInput, setsearchInput] = useState('');\n\n    const changeHandler = (event) => {\n        event.preventDefault();\n        setsearchInput(event.target.value);\n    };\n\n    const filteredSearch = () => {\n      if (searchInput.length > 0) {\n        props.recipes.filter((recipe) => {\n          return (\n            recipe.drinkName.toLowerCase().includes(searchInput.toLowerCase()) ||\n            recipe.bartender.toLowerCase().includes(searchInput.toLowerCase())\n          );\n        });\n      };    \n    };\n\n  return (\n    <Fragment>\n      <input\n        type='search'\n        placeholder='Search by Drink Name or Bartender'\n        value={searchInput}\n        onChange={changeHandler}\n      />\n      <ul className={classes.list}>\n        <button type='button' onClick={filteredSearch}>Search</button>\n        {props.recipes.map((recipe) => (\n          <RecipeItem\n            key={recipe.id}\n            id={recipe.id}\n            drinkName={recipe.drinkName}\n            bartender={recipe.bartender}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default RecipeList;\n"]},"metadata":{},"sourceType":"module"}