{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/duo/src/pages/Recipes/components/form/RecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport Card from '../../../../components/UI/Card/Card';\nimport LoadingSpinner from '../../../../components/UI/LoadingSpinner/LoadingSpinner';\nimport Modal from '../../../../components/UI/Modal/Modal';\nimport Backdrop from '../../../../components/UI/Backdrop/Backdrop';\nimport classes from './RecipeForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = props => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false); // const [drinkNameInput, setDrinkNameInput] = useState('');\n  // const [bartenderInput, setBartenderInput] = useState('');\n\n  const [defaultInfo, setDefaultInfo] = useState({\n    drinkName: '',\n    bartender: ''\n  });\n\n  const showModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n  }; // const updatedrinkNameHandler = (event) => {\n  //   event.preventDefault();\n  //   setDrinkNameInput(event.target.value);\n  // };\n  // const updateBartenderHandler = (event) => {\n  //   event.preventDefault();\n  //   setBartenderInput(event.target.value);\n  // };\n\n\n  const updatedHandler = event => {\n    event.preventDefault();\n    setDefaultInfo({ ...defaultInfo,\n      [event.target.name]: event.target.value\n    });\n  }; // const checkFormHandler = (event) => {\n  //   event.preventDefault();\n  //   if (drinkNameInput === '' || bartenderInput === '') {\n  //     alert('Please fill out whole form!');\n  //     return;\n  //   } else {\n  //     showModalHandler();\n  //   };\n  // };\n\n\n  const checkFormHandler = event => {\n    event.preventDefault();\n\n    if (defaultInfo.drinkName.trim() === '') {\n      alert('Please fill out whole form!');\n      return;\n    } else {\n      showModalHandler();\n    }\n\n    ;\n  }; // const submitFormHandler = (event) => {\n  //   event.preventDefault();\n  //   props.onAddRecipe({ drinkName: drinkNameInput, bartender: bartenderInput });\n  // };\n\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    props.onAddRecipe(defaultInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitFormHandler,\n      children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loading,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"drinkName\",\n          children: \"Drink Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"drinkName\",\n          onChange: updatedHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bartender\",\n          children: \"Bartender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"bartender\",\n          onChange: updatedHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"button\",\n          onClick: checkFormHandler,\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n          onConfirm: submitFormHandler,\n          onCancel: closeModalHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), showModal && /*#__PURE__*/_jsxDEV(Backdrop, {\n          onCancel: closeModalHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeForm, \"SLlrZ/+CM1IZO1XEwTw9a33o35Q=\");\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/Users/alexis/Desktop/duo/src/pages/Recipes/components/form/RecipeForm.js"],"names":["useState","useRef","Card","LoadingSpinner","Modal","Backdrop","classes","RecipeForm","props","showModal","setShowModal","defaultInfo","setDefaultInfo","drinkName","bartender","showModalHandler","closeModalHandler","updatedHandler","event","preventDefault","target","name","value","checkFormHandler","trim","alert","submitFormHandler","onAddRecipe","form","isLoading","loading","control","actions"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\nimport Card from '../../../../components/UI/Card/Card';\nimport LoadingSpinner from '../../../../components/UI/LoadingSpinner/LoadingSpinner';\nimport Modal from '../../../../components/UI/Modal/Modal';\nimport Backdrop from '../../../../components/UI/Backdrop/Backdrop';\nimport classes from './RecipeForm.module.css';\n\nconst RecipeForm = (props) => {\n  const [showModal, setShowModal] = useState(false);\n  // const [drinkNameInput, setDrinkNameInput] = useState('');\n  // const [bartenderInput, setBartenderInput] = useState('');\n  const [defaultInfo, setDefaultInfo] = useState({\n    drinkName: '',\n    bartender: '',\n});\n\n  const showModalHandler = ()=> {\n    setShowModal(true);\n  };\n  \n  const closeModalHandler = () => {\n    setShowModal(false);\n  };\n\n  // const updatedrinkNameHandler = (event) => {\n  //   event.preventDefault();\n  //   setDrinkNameInput(event.target.value);\n  // };\n\n  // const updateBartenderHandler = (event) => {\n  //   event.preventDefault();\n  //   setBartenderInput(event.target.value);\n  // };\n  const updatedHandler = (event) => {\n    event.preventDefault();\n    setDefaultInfo({...defaultInfo, [event.target.name]: event.target.value})\n  };\n\n  // const checkFormHandler = (event) => {\n  //   event.preventDefault();\n\n  //   if (drinkNameInput === '' || bartenderInput === '') {\n  //     alert('Please fill out whole form!');\n  //     return;\n  //   } else {\n  //     showModalHandler();\n  //   };\n  // };\n  const checkFormHandler = (event) => {\n    event.preventDefault();\n\n    if (defaultInfo.drinkName.trim() === '') {\n      alert('Please fill out whole form!');\n      return;\n    } else {\n      showModalHandler();\n    };\n  };\n\n  // const submitFormHandler = (event) => {\n  //   event.preventDefault();\n\n  //   props.onAddRecipe({ drinkName: drinkNameInput, bartender: bartenderInput });\n\n  // };\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    props.onAddRecipe(defaultInfo);\n\n  };\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n        <div className={classes.control}>\n          <label htmlFor='drinkName'>Drink Name</label>\n          <input type='text' id='drinkName' onChange={updatedHandler} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='bartender'>Bartender</label>\n          <input type='text' id='bartender' onChange={updatedHandler} />\n        </div>\n        <div className={classes.actions}>\n          <button className='btn' type='button' onClick={checkFormHandler}>Add Recipe</button>\n          {showModal && <Modal onConfirm={submitFormHandler} onCancel={closeModalHandler} />}\n          {showModal && <Backdrop onCancel={closeModalHandler} />}\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default RecipeForm;\n"]},"metadata":{},"sourceType":"module"}